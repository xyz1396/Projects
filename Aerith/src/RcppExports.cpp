// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getUnfilteredPSMs
DataFrame getUnfilteredPSMs(CharacterVector workingPath);
RcppExport SEXP _Aerith_getUnfilteredPSMs(SEXP workingPathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type workingPath(workingPathSEXP);
    rcpp_result_gen = Rcpp::wrap(getUnfilteredPSMs(workingPath));
    return rcpp_result_gen;
END_RCPP
}
// getUnfilteredPeptides
DataFrame getUnfilteredPeptides(CharacterVector workingPath);
RcppExport SEXP _Aerith_getUnfilteredPeptides(SEXP workingPathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type workingPath(workingPathSEXP);
    rcpp_result_gen = Rcpp::wrap(getUnfilteredPeptides(workingPath));
    return rcpp_result_gen;
END_RCPP
}
// getFilterThreshold
DataFrame getFilterThreshold(CharacterVector workingPath, NumericVector OverallThreshold);
RcppExport SEXP _Aerith_getFilterThreshold(SEXP workingPathSEXP, SEXP OverallThresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type workingPath(workingPathSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type OverallThreshold(OverallThresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(getFilterThreshold(workingPath, OverallThreshold));
    return rcpp_result_gen;
END_RCPP
}
// precursor_peak_calculator
DataFrame precursor_peak_calculator(CharacterVector AAstr);
RcppExport SEXP _Aerith_precursor_peak_calculator(SEXP AAstrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type AAstr(AAstrSEXP);
    rcpp_result_gen = Rcpp::wrap(precursor_peak_calculator(AAstr));
    return rcpp_result_gen;
END_RCPP
}
// precursor_peak_calculator_DIY
DataFrame precursor_peak_calculator_DIY(CharacterVector AAstr, CharacterVector Atom, NumericVector Prob);
RcppExport SEXP _Aerith_precursor_peak_calculator_DIY(SEXP AAstrSEXP, SEXP AtomSEXP, SEXP ProbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type AAstr(AAstrSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type Atom(AtomSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Prob(ProbSEXP);
    rcpp_result_gen = Rcpp::wrap(precursor_peak_calculator_DIY(AAstr, Atom, Prob));
    return rcpp_result_gen;
END_RCPP
}
// BYion_peak_calculator_DIY
DataFrame BYion_peak_calculator_DIY(CharacterVector AAstr, CharacterVector Atom, NumericVector Prob);
RcppExport SEXP _Aerith_BYion_peak_calculator_DIY(SEXP AAstrSEXP, SEXP AtomSEXP, SEXP ProbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type AAstr(AAstrSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type Atom(AtomSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Prob(ProbSEXP);
    rcpp_result_gen = Rcpp::wrap(BYion_peak_calculator_DIY(AAstr, Atom, Prob));
    return rcpp_result_gen;
END_RCPP
}
// readOneScanMS2
List readOneScanMS2(CharacterVector ftFile, NumericVector scanCount);
RcppExport SEXP _Aerith_readOneScanMS2(SEXP ftFileSEXP, SEXP scanCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type ftFile(ftFileSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scanCount(scanCountSEXP);
    rcpp_result_gen = Rcpp::wrap(readOneScanMS2(ftFile, scanCount));
    return rcpp_result_gen;
END_RCPP
}
// readOneScanMS1
List readOneScanMS1(CharacterVector ftFile, NumericVector scanCount);
RcppExport SEXP _Aerith_readOneScanMS1(SEXP ftFileSEXP, SEXP scanCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type ftFile(ftFileSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scanCount(scanCountSEXP);
    rcpp_result_gen = Rcpp::wrap(readOneScanMS1(ftFile, scanCount));
    return rcpp_result_gen;
END_RCPP
}
// readScansMS1
List readScansMS1(CharacterVector ftFile, NumericVector scanCount);
RcppExport SEXP _Aerith_readScansMS1(SEXP ftFileSEXP, SEXP scanCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type ftFile(ftFileSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scanCount(scanCountSEXP);
    rcpp_result_gen = Rcpp::wrap(readScansMS1(ftFile, scanCount));
    return rcpp_result_gen;
END_RCPP
}
// readAllScanMS1
List readAllScanMS1(CharacterVector ftFile);
RcppExport SEXP _Aerith_readAllScanMS1(SEXP ftFileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type ftFile(ftFileSEXP);
    rcpp_result_gen = Rcpp::wrap(readAllScanMS1(ftFile));
    return rcpp_result_gen;
END_RCPP
}
// readScansMS2
List readScansMS2(CharacterVector ftFile, NumericVector scanCount);
RcppExport SEXP _Aerith_readScansMS2(SEXP ftFileSEXP, SEXP scanCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type ftFile(ftFileSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scanCount(scanCountSEXP);
    rcpp_result_gen = Rcpp::wrap(readScansMS2(ftFile, scanCount));
    return rcpp_result_gen;
END_RCPP
}
// readAllScanMS2
List readAllScanMS2(CharacterVector ftFile);
RcppExport SEXP _Aerith_readAllScanMS2(SEXP ftFileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type ftFile(ftFileSEXP);
    rcpp_result_gen = Rcpp::wrap(readAllScanMS2(ftFile));
    return rcpp_result_gen;
END_RCPP
}
// readSip
List readSip(CharacterVector sipFile);
RcppExport SEXP _Aerith_readSip(SEXP sipFileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type sipFile(sipFileSEXP);
    rcpp_result_gen = Rcpp::wrap(readSip(sipFile));
    return rcpp_result_gen;
END_RCPP
}
// readSips
List readSips(CharacterVector workingPath);
RcppExport SEXP _Aerith_readSips(SEXP workingPathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type workingPath(workingPathSEXP);
    rcpp_result_gen = Rcpp::wrap(readSips(workingPath));
    return rcpp_result_gen;
END_RCPP
}
// calc_sum
double calc_sum(NumericVector x);
RcppExport SEXP _Aerith_calc_sum(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_sum(x));
    return rcpp_result_gen;
END_RCPP
}
// test_ftFileReader
void test_ftFileReader(CharacterVector ftFile);
RcppExport SEXP _Aerith_test_ftFileReader(SEXP ftFileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type ftFile(ftFileSEXP);
    test_ftFileReader(ftFile);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Aerith_getUnfilteredPSMs", (DL_FUNC) &_Aerith_getUnfilteredPSMs, 1},
    {"_Aerith_getUnfilteredPeptides", (DL_FUNC) &_Aerith_getUnfilteredPeptides, 1},
    {"_Aerith_getFilterThreshold", (DL_FUNC) &_Aerith_getFilterThreshold, 2},
    {"_Aerith_precursor_peak_calculator", (DL_FUNC) &_Aerith_precursor_peak_calculator, 1},
    {"_Aerith_precursor_peak_calculator_DIY", (DL_FUNC) &_Aerith_precursor_peak_calculator_DIY, 3},
    {"_Aerith_BYion_peak_calculator_DIY", (DL_FUNC) &_Aerith_BYion_peak_calculator_DIY, 3},
    {"_Aerith_readOneScanMS2", (DL_FUNC) &_Aerith_readOneScanMS2, 2},
    {"_Aerith_readOneScanMS1", (DL_FUNC) &_Aerith_readOneScanMS1, 2},
    {"_Aerith_readScansMS1", (DL_FUNC) &_Aerith_readScansMS1, 2},
    {"_Aerith_readAllScanMS1", (DL_FUNC) &_Aerith_readAllScanMS1, 1},
    {"_Aerith_readScansMS2", (DL_FUNC) &_Aerith_readScansMS2, 2},
    {"_Aerith_readAllScanMS2", (DL_FUNC) &_Aerith_readAllScanMS2, 1},
    {"_Aerith_readSip", (DL_FUNC) &_Aerith_readSip, 1},
    {"_Aerith_readSips", (DL_FUNC) &_Aerith_readSips, 1},
    {"_Aerith_calc_sum", (DL_FUNC) &_Aerith_calc_sum, 1},
    {"_Aerith_test_ftFileReader", (DL_FUNC) &_Aerith_test_ftFileReader, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_Aerith(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
